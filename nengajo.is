// Const
let width = 50
let height = 36
let n = null

// Utils
@createArr(content, size) {
  if (size == 0) {
    return []
  }
  //Obj:copy()はObjにしか使えないため
  return Core:range(1, size).map(@(item){Json:parse(Json:stringify(content))})
}

@unifyLayers(layers) {
  var unified = createArr(createArr(" ", width), height)
  for (let layer, layers.len) {
    for (let y, layers[layer].len) {
      if (height <= y) {
        break
      }
      for (let x, layers[layer][y].len) {
        if (width <= x) {
          break
        }
        if (layers[layer][y][x] != n) {
          unified[y][x] = layers[layer][y][x]
        }
      }
    }
  }
  return unified
}

// Drawings
@drawAkeome(layers, startedF, nowF, chars) {
  // Generated By: https://rakko.tools/tools/68/
  // Font: Zen Old Mincho Black, SIL OFL 1.1
  let akeome = 
 [[ n , n , n , n , n , n , n , n , n ,"=","@","@",".",".","-","+","+","-", n , n , n , n , n , n , n , n , n , n , n ,"*","@","+", n , n , n , n , n , n , n , n , n , n ,"#","@","@","+", n , n , n , n ],
  [ n , n , n ,"+","+","-","-","-","=","#","@","@","@","@","@","@","@","@",":", n , n , n , n , n , n , n , n , n , n ,"#","@","@",":", n , n , n , n , n , n , n , n , n ,"#","@","@","-", n , n , n , n ],
  [ n , n , n ,".","%","@","@","@","@","@","@","@","#","*","+","-",":", n , n , n , n , n , n , n , n , n , n , n , n ,"%","@","@",".", n , n , n , n , n , n , n , n , n ,"#","@","@",":","*","*","+",":"],
  [ n , n , n , n , n ,":","-","-",":","*","@","#", n , n ,"=","-", n , n , n , n , n , n , n , n , n , n , n , n ,":","@","@","*", n , n , n , n ,"#","=",":",":",":",":","%","@","@","#","@","@","@","%"],
  [ n , n , n , n , n , n , n , n , n ,"+","@","%","=","+","*","@","*","+","=",":", n , n , n , n , n , n , n , n ,"+","@","@",".", n , n , n , n ,":","#","@","@","@","@","@","@","@","@","#","*","=","."],
  [ n , n , n , n , n , n , n ,".","=","%","@","%","-",":","-","@","*","-","*","@","%","+",".", n , n , n , n , n ,"#","@","+", n , n ,"-", n , n , n , n ,":","-","-","-","#","@","@",":", n , n , n , n ],
  [ n , n , n , n , n ,":","*","@","*","*","@","%", n , n ,"#","@",":", n , n ,":","%","@","@","-", n , n , n ,".","@","@",":", n ,".","*", n , n , n , n , n , n , n , n ,"*","@","@",":", n , n , n , n ],
  [ n , n , n , n ,"+","@","*",".", n ,"=","@","@",":","#","@","+", n , n , n , n ,"-","@","@","@",".", n , n ,":","@","@",".", n ,"*","-", n , n , n , n , n , n , n , n ,"*","@","@",":", n , n , n , n ],
  [ n , n ,".","#","@","=", n , n , n ,":","@","@","@","@","+", n , n , n , n , n , n ,"@","@","@","=", n , n ,":","@","@", n ,":","@", n , n , n , n , n , n , n , n , n ,"#","@","@",":", n , n , n , n ],
  [ n , n ,"#","@","=", n , n , n , n ,".","@","@","@","+", n , n , n , n , n , n , n ,"@","@","@","=", n , n ,":","@","@",":","#","*", n , n , n , n , n , n , n , n , n ,"%","@","@", n , n , n , n , n ],
  [ n ,"=","@","%", n , n , n ,":","+","@","@","@","@","%", n , n , n , n , n , n ,"=","@","@","@",":", n , n , n ,"%","@","@","@","+", n , n , n , n , n , n , n , n ,":","@","@","*", n , n , n , n , n ],
  [ n ,"#","@","%","=","+","%","@","@","%","=","#","@","%", n , n , n , n , n ,":","@","@","@","+", n , n , n , n ,"=","@","@","@","*", n , n , n , n , n , n , n , n ,"*","@","@",".", n , n , n , n , n ],
  [ n ,"*","@","@","@","@","@","*","-", n , n , n ,":",".", n , n , n ,".","+","@","@","%","=", n , n , n , n , n , n ,"*","@","@","@",".", n , n , n , n , n , n ,"-","@","%",":", n , n , n , n , n , n ],
  [ n , n ,"-","=","=",":", n , n , n , n , n , n , n , n ,".","-","*","@","@","#","=", n , n , n , n , n , n , n , n , n ,"-","+","-", n , n , n , n , n ,".","+","@","+",".", n , n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n , n , n , n , n ,"=","+","*","*","+","=",":", n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,".","+","+","-", n , n , n , n , n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,".",":",":", n , n , n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n ,":","+","+","=", n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,"+","@","%","=", n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n , n ,"+","@","@","*", n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,":","=","=",".", n , n , n , n , n , n , n , n , n ,"-","@","@","#", n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n , n ,"+","@","@",":", n , n , n , n , n , n , n , n ,".",".", n , n , n , n ,".","=","%","@","%", n , n , n , n , n , n , n , n , n ,"*","@","@",":", n , n , n , n , n , n ],
  [ n , n , n , n , n , n , n , n ,"+","@","%",":",".", n , n , n , n ,"-","#","@","@","@","%","+",".", n , n , n ,".","@","@","=", n , n , n , n , n ,".",":","-","@","@","#", n , n , n , n , n , n , n ],
  [ n , n ,"+","-",":",":","-","=","%","@","@","@","@","=", n ,".","#","*","-",":","-","*","@","@","%", n , n , n , n ,"=","@","%",".",":","+","#","%","#","*","@","@","@","@","%","*","-", n , n , n , n ],
  [ n , n ,":","@","@","@","@","@","@","@","@","#","+","-", n ,"=",".", n , n , n , n ,"#","%","%","#", n , n , n , n , n ,"*","@","@","@","*",":", n , n ,"=","@","@","+",".","=","@","@","%",":", n , n ],
  [ n , n , n ,".","=","+","=","-","#","@","=", n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,".","*","@","@","#",".", n , n ,":","@","@","#", n , n , n ,".","%","@","@","-", n ],
  [ n , n , n , n , n , n , n , n ,"#","@","=", n , n ,".",":","=","=","=","=","-",".", n , n , n , n , n , n , n ,".","%","@","=","%","@","%",":",":","%","@","%",".", n , n , n , n ,"-","@","@","@","."],
  [ n , n , n , n , n , n , n , n ,"#","@","*","+","%","@","#","*","*","*","#","@","@","#","-", n , n , n , n ,".","%","@","=", n ,".","#","@","@","%","@","%",".", n , n , n , n , n , n ,"@","@","@","-"],
  [ n , n , n , n , n , n , n ,".","%","@","%","+",":", n , n , n , n , n , n ,":","@","@","@","=", n , n , n ,"+","@","#", n , n , n , n ,"#","@","@","@","+",".", n , n , n , n , n , n ,"@","@","@","-"],
  [ n , n , n , n , n ,":","*","@","@","@","+", n , n ,"-", n , n , n , n , n , n ,"*","@","@","@", n , n , n ,"@","@","-", n , n ,".","*","@","@","%","@","@","@","=", n , n , n , n ,"-","@","@","@","."],
  [".","+","+","+","#","@","#",":","#","@","*", n , n ,"#","-", n , n , n , n ,".","%","@","@","%", n , n ,".","@","@","*","=","*","@","@","%","-", n ,":","+","+",".", n , n , n ,".","%","@","@","+", n ],
  ["-","@","@","@","@","%","%","+","%","@","%", n , n ,"+","@","*","=","=","+","%","@","@","@","-", n , n , n ,"%","@","@","@","@","#","=", n , n , n , n , n , n , n , n , n ,"=","%","@","@","=", n , n ],
  [ n ,":","#","%","-", n ,"=","@","@","@","#", n , n , n ,"+","@","@","@","@","@","@","#",":", n , n , n , n ,".","-","=","-",".", n , n , n , n , n , n , n , n ,":","+","%","@","%","+",".", n , n , n ],
  [ n , n , n , n , n , n , n ,"+","#","+",".", n , n , n , n ,".","-","=","=","-",".", n , n , n , n , n , n , n , n , n , n , n , n , n , n , n ,":","=","+","*","+","=","-",".", n , n , n , n , n , n ]]
  if ((nowF - startedF) % 2 == 0) {
    akeome.unshift(createArr(n, width))
  }
  return layers.push(akeome)
}

@drawStar(layers, startedF, nowF, startedX, startedY) {
  let fallingF = 5
  let blinkingF = 10
  let fallingChar = "/"
  let blinkingChars = ["+", "x"]

  let progress = nowF - startedF
  let blinkingChar = blinkingChars[progress % blinkingChars.len]
  let x = startedX - progress
  let y = startedY + progress

  if (startedF + fallingF + blinkingF < nowF) {
    // finished
    return layers
  } else if (startedF + fallingF < nowF) {
    // blinking
    let content = createArr([],
 y - 1).push(createArr(n, x - 1).push(blinkingChar))
    return layers.push(content)
  } else if (startedF < nowF) {
    // falling
    let content = createArr([],
 y - 1).push(createArr(n, x - 1).push(fallingChar))
    return layers.push(content)
  }
}

@drawText(layers, text, x, y) {
  let content = createArr([],
 y - 1).push(createArr(n, x - 1).concat(text.split()))
  return layers.push(content)
}

// Main
var layers = []
var stars = []
var f = 0
loop {
  layers = []
  layers = drawAkeome(layers, 0, f)
  each(let star, stars) layers = drawStar(layers, star.f, f, star.x, star.y)
  layers = drawText(layers, "Happy New Year!", 17, 34)
  layers = drawText(layers, "今年もよろしくおねがいします".slice(0, f * 2), 10, 35)
  let text = unifyLayers(layers).map(@(line){line.join("")}).join(Str:lf)
  Ui:render([
    Ui:C:mfm({
      text: `\`\`\`{Str:lf}{text}{Str:lf}\`\`\``,
    })
  ])

  stars.push({
    f: f,
    x: Math:rnd(0, width),
    y: Math:rnd(0, height)
  })
  f += 1
  Core:sleep(10)
}